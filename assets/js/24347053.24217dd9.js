"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[217],{59931:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>h,default:()=>u,frontMatter:()=>p,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"openapi/schemas/qrcodeopts","title":"QRCodeOpts","description":"As soon as you include this object the OID4VP agent has to generate a QR code. Every RP implementation needs to support this, as we want to make it easy on the integration side. The integration side can choose whether they create their own QR codes, or whether they want to use the QR code from the RP. Thus every RP conforming to this spec should support generating a QR code in data-uri format. No property is mandatory, so a \'qrCodeOpts\': {} is already valid and generates a QR with the default properties applied. A RP implementation is free to implement additional properties like logo\'s etc. This API only mandates a few common properties to not make it too complex for RPs. If the integrating app wants to use their own QR codes they simply need to omit the qr_code param from the request. The agent should not generate a QT code in this case","source":"@site/docs/openapi/schemas/qrcodeopts.schema.mdx","sourceDirName":"openapi/schemas","slug":"/openapi/schemas/qrcodeopts","permalink":"/universal-oid4vp/docs/openapi/schemas/qrcodeopts","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"qrcodeopts","title":"QRCodeOpts","description":"As soon as you include this object the OID4VP agent has to generate a QR code. Every RP implementation needs to support this, as we want to make it easy on the integration side. The integration side can choose whether they create their own QR codes, or whether they want to use the QR code from the RP. Thus every RP conforming to this spec should support generating a QR code in data-uri format. No property is mandatory, so a \'qrCodeOpts\': {} is already valid and generates a QR with the default properties applied. A RP implementation is free to implement additional properties like logo\'s etc. This API only mandates a few common properties to not make it too complex for RPs. If the integrating app wants to use their own QR codes they simply need to omit the qr_code param from the request. The agent should not generate a QT code in this case","sidebar_label":"QRCodeOpts","hide_title":true,"hide_table_of_contents":true,"schema":true,"sample":{"size":400,"color_dark":"#000000","color_light":"#ffffff"},"custom_edit_url":null},"sidebar":"docs","previous":{"title":"CallbackOpts","permalink":"/universal-oid4vp/docs/openapi/schemas/callbackopts"}}');var s=o(74848),i=o(28453),r=o(95730),n=o.n(r),d=o(9303);const p={id:"qrcodeopts",title:"QRCodeOpts",description:"As soon as you include this object the OID4VP agent has to generate a QR code. Every RP implementation needs to support this, as we want to make it easy on the integration side. The integration side can choose whether they create their own QR codes, or whether they want to use the QR code from the RP. Thus every RP conforming to this spec should support generating a QR code in data-uri format. No property is mandatory, so a 'qrCodeOpts': {} is already valid and generates a QR with the default properties applied. A RP implementation is free to implement additional properties like logo's etc. This API only mandates a few common properties to not make it too complex for RPs. If the integrating app wants to use their own QR codes they simply need to omit the qr_code param from the request. The agent should not generate a QT code in this case",sidebar_label:"QRCodeOpts",hide_title:!0,hide_table_of_contents:!0,schema:!0,sample:{size:400,color_dark:"#000000",color_light:"#ffffff"},custom_edit_url:null},h=void 0,c={},l=[];function m(e){const t={p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(d.default,{as:"h1",className:"openapi__heading",children:"QRCodeOpts"}),"\n",(0,s.jsx)(t.p,{children:'As soon as you include this object the OID4VP agent has to generate a QR code. Every RP implementation needs to support this, as we want to make it easy on the integration side. The integration side can choose whether they create their own QR codes, or whether they want to use the QR code from the RP. Thus every RP conforming to this spec should support generating a QR code in data-uri format. No property is mandatory, so a "qrCodeOpts": {} is already valid and generates a QR with the default properties applied. A RP implementation is free to implement additional properties like logo\'s etc. This API only mandates a few common properties to not make it too complex for RPs. If the integrating app wants to use their own QR codes they simply need to omit the qr_code param from the request. The agent should not generate a QT code in this case'}),"\n",(0,s.jsx)(n(),{schema:{type:"object",description:'As soon as you include this object the OID4VP agent has to generate a QR code. Every RP implementation needs to support this, as we want to make it easy on the integration side. The integration side can choose whether they create their own QR codes, or whether they want to use the QR code from the RP. Thus every RP conforming to this spec should support generating a QR code in data-uri format. No property is mandatory, so a "qrCodeOpts": {} is already valid and generates a QR with the default properties applied. A RP implementation is free to implement additional properties like logo\'s etc. This API only mandates a few common properties to not make it too complex for RPs. If the integrating app wants to use their own QR codes they simply need to omit the qr_code param from the request. The agent should not generate a QT code in this case\n',properties:{size:{type:"number",description:"Size of the QR code in pixels.",default:400},color_dark:{type:"string",description:"Color of the blocks on the QR code. Accepts a CSS <color>. For more information about CSS <color>, please refer to [https://developer.mozilla.org/en-US/docs/Web/CSS/color_value](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).",default:"#000000"},color_light:{type:"string",description:"Color of the empty areas on the QR code. Accepts a CSS <color>. For more information about CSS <color>, please refer to [https://developer.mozilla.org/en-US/docs/Web/CSS/color_value](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).",default:"#ffffff"}},title:"QRCodeOpts"},schemaType:"response"})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}}}]);