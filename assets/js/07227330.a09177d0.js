"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2415],{87738:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>u,default:()=>m,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"openapi/schemas/authorizationstatusresponse","title":"AuthorizationStatusResponse","description":"","source":"@site/docs/openapi/schemas/authorizationstatusresponse.schema.mdx","sourceDirName":"openapi/schemas","slug":"/openapi/schemas/authorizationstatusresponse","permalink":"/universal-oid4vp/docs/openapi/schemas/authorizationstatusresponse","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"authorizationstatusresponse","title":"AuthorizationStatusResponse","description":"","sidebar_label":"AuthorizationStatusResponse","hide_title":true,"hide_table_of_contents":true,"schema":true,"sample":{"status":"authorization_request_created","correlation_id":"2cc29d1c-7d00-46f8-b0ae-b4779d2ff143","error":{"status":500,"message":"Could not verify auth status","error_details":"string"},"query_id":"ExampleSdJwtId","last_updated":1706515200000,"verified_data":{"authorization_response":{"presentation_submission":{},"vp_token":{}},"credential_claims":[{"id":"string","type":"string","claims":{}}]}},"custom_edit_url":null},"sidebar":"docs","previous":{"title":"CreateAuthorizationRequestResponse","permalink":"/universal-oid4vp/docs/openapi/schemas/createauthorizationrequestresponse"},"next":{"title":"RequestUriMethod","permalink":"/universal-oid4vp/docs/openapi/schemas/requesturimethod"}}');var r=i(74848),a=i(28453),n=i(95730),o=i.n(n),p=i(9303);const d={id:"authorizationstatusresponse",title:"AuthorizationStatusResponse",description:"",sidebar_label:"AuthorizationStatusResponse",hide_title:!0,hide_table_of_contents:!0,schema:!0,sample:{status:"authorization_request_created",correlation_id:"2cc29d1c-7d00-46f8-b0ae-b4779d2ff143",error:{status:500,message:"Could not verify auth status",error_details:"string"},query_id:"ExampleSdJwtId",last_updated:17065152e5,verified_data:{authorization_response:{presentation_submission:{},vp_token:{}},credential_claims:[{id:"string",type:"string",claims:{}}]}},custom_edit_url:null},u=void 0,l={},c=[];function h(e){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(p.default,{as:"h1",className:"openapi__heading",children:"AuthorizationStatusResponse"}),"\n",(0,r.jsx)(o(),{schema:{type:"object",required:["status","query_id","correlation_id","definition_id","last_updated"],properties:{status:{type:"string",enum:["authorization_request_created","authorization_request_retrieved","authorization_response_received","authorization_response_verified","error"],title:"AuthorizationStatus"},correlation_id:{type:"string",description:"Unique identifier for the authentication session",example:"2cc29d1c-7d00-46f8-b0ae-b4779d2ff143"},error:{type:"object",description:"Error details returned when an operation fails",properties:{status:{type:"integer",description:"HTTP status code",example:500},message:{type:"string",description:"Human-readable error message",example:"Could not verify auth status"},error_details:{type:"string",description:"Additional error details or stack trace when available"}},required:["status","message"],title:"Error"},query_id:{description:"Identifier for the presentation definition that specifies which credentials are required",example:"ExampleSdJwtId",type:"string"},last_updated:{type:"integer",description:"Unix timestamp in milliseconds representing when the status was last updated",example:17065152e5},verified_data:{type:"object",description:"This object is only included in case the authorization status is 'authorization_response_verified'",properties:{authorization_response:{type:"object",properties:{presentation_submission:{type:"object",description:"Object containing information about how the presented credentials fulfill the presentation definition requirements. Only if PE is used!"},vp_token:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"},{type:"array",items:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"}]},title:"MultipleVpTokens"},{type:"object",additionalProperties:{type:"array",items:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"}]},title:"MultipleVpTokens"},title:"MultipleVpTokenDCQL"}],title:"VpToken"}},title:"AuthorizationResponsePayload"},credential_claims:{type:"array",items:{type:"object",description:"Represents a single credential with its claims and type",required:["id","type"],properties:{id:{type:"string",description:"The id of the query. Can be a presentation exchange id, a DCQL query or query set Id. Used by the RP to match the credential against the query"},type:{type:"string",description:"The digital credential type. Can be a vct value, or for instance a json-ld type"},claims:{type:"object",additionalProperties:{type:"string"},description:"The claims returned and deserialized in the form of a map, where the keys represent the claim names"}},title:"VerifiedClaimsValue"}}},title:"VerifiedData"}},title:"AuthorizationStatusResponse"},schemaType:"response"})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h()}}}]);