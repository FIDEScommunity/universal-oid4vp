"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2414],{58:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>f,frontMatter:()=>p,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"openapi/schemas/verifieddata","title":"VerifiedData","description":"This object is only included in case the authorization status is \'authorization_response_verified\'","source":"@site/docs/openapi/schemas/verifieddata.schema.mdx","sourceDirName":"openapi/schemas","slug":"/openapi/schemas/verifieddata","permalink":"/universal-oid4vp/docs/openapi/schemas/verifieddata","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"verifieddata","title":"VerifiedData","description":"This object is only included in case the authorization status is \'authorization_response_verified\'","sidebar_label":"VerifiedData","hide_title":true,"hide_table_of_contents":true,"schema":true,"sample":{"authorization_response":{"presentation_submission":{},"vp_token":{}},"vp_token":[{},"string",[{},"string"],{}],"credential_claims_deserialized":[{}]},"custom_edit_url":null},"sidebar":"docs","previous":{"title":"VerifiedDataMode","permalink":"/universal-oid4vp/docs/openapi/schemas/verifieddatamode"},"next":{"title":"VpToken","permalink":"/universal-oid4vp/docs/openapi/schemas/vptoken"}}');var s=i(74848),a=i(28453),o=i(95730),r=i.n(o),l=i(9303);const p={id:"verifieddata",title:"VerifiedData",description:"This object is only included in case the authorization status is 'authorization_response_verified'",sidebar_label:"VerifiedData",hide_title:!0,hide_table_of_contents:!0,schema:!0,sample:{authorization_response:{presentation_submission:{},vp_token:{}},vp_token:[{},"string",[{},"string"],{}],credential_claims_deserialized:[{}]},custom_edit_url:null},d=void 0,c={},u=[];function h(e){const t={p:"p",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.default,{as:"h1",className:"openapi__heading",children:"VerifiedData"}),"\n",(0,s.jsx)(t.p,{children:"This object is only included in case the authorization status is 'authorization_response_verified'"}),"\n",(0,s.jsx)(r(),{schema:{type:"object",description:"This object is only included in case the authorization status is 'authorization_response_verified'",properties:{authorization_response:{type:"object",properties:{presentation_submission:{type:"object",description:"Object containing information about how the presented credentials fulfill the presentation definition requirements. Only if PE is used!"},vp_token:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"},{type:"array",items:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"}]},title:"MultipleVpTokens"},{type:"object",additionalProperties:{type:"array",items:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"}]},title:"MultipleVpTokens"},title:"MultipleVpTokenDCQL"}],title:"VpToken"}},title:"AuthorizationResponsePayload"},vp_token:{type:"array",items:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"},{type:"array",items:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"}]},title:"MultipleVpTokens"},{type:"object",additionalProperties:{type:"array",items:{oneOf:[{type:"object",title:"SingleObjectVpTokenPE"},{type:"string",title:"SingleStringVpTokenPE"}]},title:"MultipleVpTokens"},title:"MultipleVpTokenDCQL"}],title:"VpToken"}},credential_claims_deserialized:{type:"array",items:{type:"object",additionalProperties:!0},description:"All the credentials received deserialized to JSON part of an array. Meaning (SD-)JWTs are represented as JSON object. The same for Mdocs. For the latter different implementers of RP Agents could use different methods unfortunately, so there is no stability guarantee to find certain claims in the exact same spot, or even with the exact same keys between different RP agent implementations!"}},title:"VerifiedData"},schemaType:"response"})]})}function f(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);